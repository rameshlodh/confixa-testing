name: gcp-main
on:
  push:
    branches:
      - main
      
jobs:
  gcp-dev:
    name: Build and Push to GCP
    runs-on: ubuntu-latest

    permissions:
        id-token: write
        contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    # Authenticate to Google Cloud using workload identity federation
    - id: "auth"
      name: "Obtain access token by using workload identity federation"
      uses: "google-github-actions/auth@v1"

      with:
          # create_credentials_file: true
          # token_format: access_token
          workload_identity_provider: projects/796292922550/locations/global/workloadIdentityPools/confixa-github-actions/providers/congfixa-github-actions
          service_account: github-action@confixa-rnd.iam.gserviceaccount.com

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials: 0c828502b577634ea7436809a43a3e14a4a04e5a
                  
    - name: Connect to Artifact Registry
      run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://asia-south1-docker.pkg.dev

    - name: Build Docker Image
      run: docker build -t asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/abc:$GITHUB_REF_NAME-$GITHUB_SHA .

    # - uses: actions/checkout@v2
    # - name: Set env
    #   run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF_NAME-$GITHUB_SHA)" >> $GITHUB_ENV

    - name: Push Docker Image to Artifact Registry
      run: |-
        docker push asia-south1-docker.pkg.dev/confixa-rnd/confixa-docker-images/abc:$GITHUB_REF_NAME-$GITHUB_SHA

        # git clone https://${{ secrets.GCP_GITHUB_USER }}:${{ secrets.GCP_GITHUB_TOKEN }}@github.com/DigiStrique-Solutions/strique-catalog-gitops
        # cd strique-catalog-gitops
        # git checkout development

        # git config user.name "$GITHUB_ACTOR"
        # git config user.email "$GITHUB_ACTOR@wohlig.com"

        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/api.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/cron.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/cataloguecron.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/subscriptiondetails.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/user.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/webhookcron.yaml 
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/updatecron.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/shippingcron.yaml
        # yq e '.spec.template.spec.containers[0].image = "asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/strique-non-prod-infra/${{ secrets.GCP_IMAGE_NAME_DEV }}:${{ env.GITHUB_BRANCH }}"' -i deployment.apps/collectioncron.yaml

        # git add .
        # git commit -m "updating newer image"
        # git push --set-upstream origin development
